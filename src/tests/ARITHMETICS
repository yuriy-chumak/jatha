;;;; lisp
T
(not NIL)
(not (not T))

;; Basic arithmetics test
    (= 0 0)
    (= 1 1)
(not
    (= 0 1))



;; = function compares numbers according to "equal" predicate.
;; Result is true if every specified number is equal to each other, otherwise result is false.

(not
    (= 1 2))
(not
    (= 2 1))
(not
    (= 2 2.001))
(= 2 2)
(= 2 2.0)
(= 0.0 -0.0)
(not
    (= 1 2 3 4 5))
(not
    (= 4 4 4 3 4))
(= 4 4 4 4 4)
(= 4 4 4 4.0 4)

;; * function computes product of numbers.
(= (* 1 2 3) 6)
(= (* 1 2) 2)
(= (* 1) 1)
(= (*) 1)
(= (* 1234567890123456789 9876543210987654321) 12193263113702179522374638011112635269)
(= (* 1.3 -5) -6.5)

;; + function computes sum of numbers.
(= (+ 1 2 3) 6)
(= (+ 1 2) 3)
(= (+ 1) 1)
(= (+) 0)
(= (+ 1234567890123456789 9876543210987654321) 11111111101111111110)
(= (+ 1.3 -5) -3.7)

;; - function computes difference between first value and sum of the rest.
;; When called with only one argument, it does negation.
(= (- 1 2 3) -4)
(= (- 1 2) -1)
(= (- 1) -1)
(= (- 1234567890123456789 9876543210987654321) -8641975320864197532)
(= (- 1.3 -5) 6.3)

;; / function computes division or reciprocal.
;; When called with one argument it computes reciprocal.
(= (/ 10) 0.1)
(= (/ 10.0) 0.1)
(= (/ 10 2) 5)
(= (/ 2 10) 0.2)
(= (/ 100 2 5 2) 5)
(= (/ 100 (* 2 5 2)) 5)
(= (/ 1234567890123456789 9876543210987654321) 0.12499999886093749)  ; ?
(= (/ 1.3 -5) -0.26)

